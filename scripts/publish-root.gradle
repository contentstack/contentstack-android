// Create variables with empty default values
ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    ext["ossrhUsername"] = localProperties['mavenCentralUsername']
    ext["ossrhPassword"] = localProperties['mavenCentralPassword']
    ext["sonatypeStagingProfileId"] = localProperties['sonatypeStagingProfileId']
    ext["signing.keyId"] = localProperties['signing.keyId']
    ext["signing.password"] = localProperties['signing.password']
    ext["signing.secretKeyRingFile"] = localProperties['signing.secretKeyRingFile']
}

nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://oss.sonatype.org/content/repositories/snapshots/"))


//            if (project.version.endsWith('-SNAPSHOT')) {
//                snapshotRepositoryUrl.set(uri("https://oss.sonatype.org/content/repositories/snapshots"))
//            } else {
//                nexusUrl.set(uri("https://oss.sonatype.org/service/local/"))
//            }
        }
    }
}
