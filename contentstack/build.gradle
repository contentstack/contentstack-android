apply plugin: 'com.android.library'
apply plugin: 'jacoco'

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

android {
    namespace 'com.contentstack.sdk'
    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
        testHandleProfiling true
        testFunctionalTest true
    }
    buildTypes {
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))
        debug {
            debuggable false
            testCoverageEnabled true
            buildConfigField "String", "host", localProperties['host']
            buildConfigField "String", "APIKey", localProperties['APIKey']
            buildConfigField "String", "deliveryToken", localProperties['deliveryToken']
            buildConfigField "String", "environment", localProperties['env']
            buildConfigField "String", "contentTypeUID", localProperties['contentType']
            buildConfigField "String", "assetUID", localProperties['assetUid']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "host", localProperties['host']
            buildConfigField "String", "APIKey", localProperties['APIKey']
            buildConfigField "String", "deliveryToken", localProperties['deliveryToken']
            buildConfigField "String", "environment", localProperties['env']
            buildConfigField "String", "contentTypeUID", localProperties['contentType']
            buildConfigField "String", "assetUID", localProperties['assetUid']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'androidx.test:core:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}