apply plugin: 'com.android.library'
apply plugin: 'jacoco'

ext {
    PUBLISH_GROUP_ID = 'com.contentstack.sdk'
    PUBLISH_ARTIFACT_ID = 'android'
    PUBLISH_VERSION = '3.12.0-SNAPSHOT'
    PUBLISH_DESCRIPTION = 'The Content Delivery SDK is used to retrieve content from your Contentstack account and deliver it to your web or mobile properties.'
    PUBLISH_URL = 'https://github.com/contentstack/contentstack-android'
    PUBLISH_LICENSE_NAME = 'MIT License'
    PUBLISH_LICENSE_URL = 'https://github.com/contentstack/contentstack-android/blob/master/LICENSE'
    PUBLISH_DEVELOPER_ID = 'ishaileshmishra'
    PUBLISH_DEVELOPER_NAME = 'Shailesh Mishra'
    PUBLISH_DEVELOPER_EMAIL = 'shailesh.mishra@contentstack.com'
    PUBLISH_SCM_CONNECTION = 'scm:git@github.com:contentstack/contentstack-android'
    PUBLISH_SCM_DEVELOPER_CONNECTION = 'scm:git@github.com:contentstack/contentstack-android'
    PUBLISH_SCM_URL = 'https://github.com/contentstack/contentstack-android/tree/master'
}

apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    namespace 'com.contentstack.sdk'
    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            testCoverageEnabled true
            buildConfigField "String", "host", localProperties['host']
            buildConfigField "String", "APIKey", localProperties['APIKey']
            buildConfigField "String", "deliveryToken", localProperties['deliveryToken']
            buildConfigField "String", "environment", localProperties['env']
            buildConfigField "String", "contentTypeUID", localProperties['contentType']
            buildConfigField "String", "assetUID", localProperties['assetUid']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "host", localProperties['host']
            buildConfigField "String", "APIKey", localProperties['APIKey']
            buildConfigField "String", "deliveryToken", localProperties['deliveryToken']
            buildConfigField "String", "environment", localProperties['env']
            buildConfigField "String", "contentTypeUID", localProperties['contentType']
            buildConfigField "String", "assetUID", localProperties['assetUid']
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.android.volley:volley:1.2.1'
    testImplementation 'junit:junit:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    androidTestImplementation ("androidx.test.espresso:espresso-contrib:3.5.1") {
        exclude module: "protobuf-lite"
    }
}